import { ExternalProvider, JsonRpcProvider } from '@ethersproject/providers';
declare type MaybePromise<T> = Promise<T> | any;
declare type SupportedProviders = JsonRpcProvider | ExternalProvider | {
    getProvider: () => MaybePromise<JsonRpcProvider | ExternalProvider>;
    activate: () => Promise<any>;
};
/**
 * @public
 */
export declare type Web3Ethers = {
    activate: (provider: SupportedProviders) => Promise<void>;
    /**
     * @deprecated
     */
    setError: (error: Error) => void;
    deactivate: () => void;
    connector: undefined;
    chainId?: number;
    account?: null | string;
    error?: Error;
    library?: JsonRpcProvider;
    active: boolean;
    activateBrowserWallet: () => void;
    isLoading: boolean;
    /**
     * Switch to a different network.
     */
    switchNetwork: (chainId: number) => void;
};
/**
 * @public
 */
export declare function useEthers(): Web3Ethers;
export {};
//# sourceMappingURL=useEthers.d.ts.map